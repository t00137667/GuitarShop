@startuml

skinparam classAttributeIconSize 0
Builder -[hidden]>Type

class Guitar {
-GuitarSpec : guitarSpec
+getSpec(): GuitarSpec
}

abstract class Instrument {
-serialNumber: string
-price: double
}

abstract class InstrumentSpec{
-builder: Builder
-model: String
-type: Type
-topWood: Wood
-backWood: Wood
+getBuilder(): Builder
+getModel(): String
+getType(): Type
+getTopWood(): Wood
+getBackWood(): Wood
+matches(InstrumentSpec): boolean
}


class GuitarSpec {
-numStrings : Strings
+getSpec() : GuitarSpec
+getNumStrings(): String
}

class MandolinSpec {
-style: Style
+getSpec(): MandolinSpec
+getStyle()
}

class Inventory {
-list : List
get(String): Instrument
+search(GuitarSpec): Guitar [*]
+search(MandolinSpec): Mandolin [*]
+addInstrument(String, double, InstrumentSpec): void
}

enum Builder {
Fender
Martin
Gibson
Collins
+toString(): String
}

enum Style{
A
F
+toString(): String
}


enum Strings{
SIX
TWELVE
+toString(): String
}

enum Type {
Acoustic
Electric
+toString(): String
}

enum Wood {
Alderwood
Cedar
Mahogoney
Pine
+toString(): String
}


Inventory --> Instrument
Instrument o- InstrumentSpec
Instrument <|-- Mandolin
Instrument <|-- Guitar
InstrumentSpec <|-- MandolinSpec
InstrumentSpec <|-- GuitarSpec
InstrumentSpec -> Builder
Type <-- InstrumentSpec
Wood <-- InstrumentSpec
MandolinSpec --> Style
GuitarSpec --> Strings


@enduml